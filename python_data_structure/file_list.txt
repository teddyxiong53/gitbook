1 基本python编程
1.1 基本编程元素
1.2 控制语句
1.3 字符串及其操作
1.4 python内置容器及其操作
1.5 创建新函数
1.6 捕获异常
1.7 文件及其操作
1.8 创建新的class
2 容器概览
2.1 容器的类型
2.2 容器的操作
2.3 容器的实现
2.4 总结
3 查找、排序和复杂度分析
3.1 度量算法的效率
3.2 复杂性分析
3.3 查找算法
3.4 基本排序算法
3.5 快速排序
3.6 一个指数算法：递归斐波那契
3.7 案例研究：一个算法Profiler
4 数组和链式结构
4.1 数组
4.2 数组操作
4.3 二维数组
4.4 链式结构
4.5 单链表操作
4.6 链表的变种
5 接口、实现和多态
5.1 开发一个接口
5.2 开发一个基于数组的实现
5.3 开发一个基于链式结构的实现
6 继承和抽象类
6.1 使用继承来定制一个已经存在的类
6.2 使用抽象类来取出冗余代码
6.3 给所有容器的抽象类
7 栈
7.1 使用一个栈
7.2 栈的三个应用
7.3 栈的实现
7.4 案例研究：计算后缀表达式
8 队列
8.1 队列的接口和用法
8.2 队列的两个应用
8.3 队列的实现
8.4 案例研究：模拟一个超时付款线
8.5 优先级队列
8.6 案例研究：一个急救室调度系统
9 链表
9.1 使用链表
9.2 链表的应用
9.3 链表的实现
9.4 实现一个链表迭代器
9.5 案例研究：开发一个排序链表
10 树
10.1 树的简介
10.2 为什么使用树
10.3 二叉树的形状
10.4 二叉树的三个应用
10.5 二叉树遍历
10.6 开发一个二叉树
10.7 递归血统分析和编程语言
10.8 二叉树的数组实现
11 集合和字典
11.1 使用集合
11.2 python的set类
11.3 基于数组和基于链式结构的set实现
11.4 使用字典
11.5 基于数组和链式结构的字典实现
11.6 哈希策略
11.7 案例研究：度量哈希策略
11.8 set的哈希实现
11.9 字典的哈希实现
12 图
12.1 拓扑图
12.2 为什么使用图
12.3 图的表现
12.4 图的遍历
12.5 图里的树
12.6 拓扑排序
12.7 最短路径问题
12.8 开发一个图容器
12.9 案例研究：测试图算法